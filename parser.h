/*
 *	TRABALHO DE COMPILADORES: IDENTADOR DE CÓDIGO FORTRAN 77
 *
 *	ALUNOS:
 *	RAFAEL DELALIBERA RODRIGUES
 *	PAULO HENRIQUE ARANTES URGAL
 *
 *  Arquivo:  Parser.h
 *
 */

void ProgramUnit();
void MainProgram();
void MainRange();
void EndProgramStmt();
void Body();
void BodyConstruct();
void SpecificationPartConstruct();
void DeclarationConstruct();
void FunctionSubprogram();
void FunctionRange();
void EndFunctionStmt();
void SubroutineSubprogram();
void SubroutineRange();
void EndSubroutineStmt();
void BlockDataSubprogram();
void EndBlockDataStmt();
void BlockDataBody();
void BlockDataBodyConstruct();
void SpecificationStmt();
void ExecutionPartConstruct();
void ExecutableConstruct();
void ActionStmt();
void ProgramStmt();
void EntryStmt();
void FunctionStmt();
void FunctionPrefix();
void FunctionParList();
void FunctionPars();
void FunctionPar();
void SubroutineStmt();
void SubroutineParList();
void SubroutinePars();
void SubroutinePar();
void BlockDataStmt();
void DimensionStmt();
void ArrayDeclaratorList();
void ArrayDeclarator();
void ArraySpec();
void ExplicitShapeSpecList();
void ExplicitShapeSpec();
void LowerBound();
void UpperBound();
void AssumedSizeSpec();
void EquivalenceStmt();
void EquivalenceSetList();
void EquivalenceSet();
void EquivalenceObjectList();
void EquivalenceObject();
void CommonStmt();
void Comlist();
void Comblock();
void CommonBlockObject();
void TypeDeclarationStmt();
void TypeSpec();
void EntityDeclList();
void EntityDecl();
void LengthSelector();
void ImplicitStmt();
void ImplicitSpecList();
void ImplicitSpec();
void CharLength();
void TypeParamValue();
void ParameterStmt();
void NamedConstantDefList();
void NamedConstantDef();
void NamedConstant();
void NamedConstantUse();
void ExternalStmt();
void ExternalNameList();
void IntrinsicStmt();
void IntrinsicList();
void SaveStmt();
void SavedEntityList();
void SavedEntity();
void SavedCommonBlock();
void DataStmt();
void Datalist();
void DataStmtSet();
void DataStmtObjectList();
void DataStmtObject();
void DataStmtValueList();
void DataStmtValue();
void DataImpliedDo();
void DataIDoObjectList();
void DataIDoObject();
void AssignmentStmt();
void SFExprList();
void GotoStmt();
void ComputedGotoStmt();
void CommaExp();
void LblRefList();
void LblRef();
void AssignedGotoStmt();
void VariableComma();
void ArithmeticIfStmt();
void IfConstruct();
void ThenPart();
void ElseIfConstruct();
void ElseConstruct();
void ElsePart();
void ConditionalBody();
void IfThenStmt();
void ElseIfStmt();
void ElseStmt();
void EndIfStmt();
void DoConstruct();
void LabelDoStmt();
void CommaLoopControl();
void LoopControl();
void ContinueStmt();
void StopStmt();
void PauseStmt();
void WriteStmt();
void ReadStmt();
void RdCtlSpec();
void RdUnitId();
void PrintStmt();
void IoControlSpecList();
void IoControlSpec();
void InputItemList();
void InputItem();
void OutputItemList();
void InputImpliedDo();
void OutputImpliedDo();
void OpenStmt();
void ConnectSpecList();
void ConnectSpec();
void CloseStmt();
void CloseSpecList();
void CloseSpec();
void InquireStmt();
void InquireSpecList();
void InquireSpec();
void BackspaceStmt();
void EndFileStmt();
void RewindStmt();
void PositionSpecList();
void PositonSpec();
void UnitIdentifier();
void FormatIdentifier();
void FormatStmt();
/* FORMAT SPEC TREATMENT WILL NOT BE DEALED */
void StmtFunctionStmt();
void StmtFunctionRange();
void SFDummyArgNameList();
void CallStmt();
void SubroutineArgList();
void SubroutineArg();
void FunctionReference();
void ComplexDataRef1();
void ComplexDataRef();
void SectionSubscriptList();
void SectionSubscript();
void Expr();
void Primary();
void Level1Expr();
void MultOperand();
void AddOperand();
void Level2Expr();
void PowerOp();
void MultiOp();
void AddOp();
void Sign();
void UFExpr();
void UFTerm();
void UFFactor();
void UFPrimary();
void CExpr();
void CPrimary();
void COperand();
void Level3Expr();
void ConcatOp();
void AndOperand();
void OrOperand();
void EquivOperand();
void Level5Expr();
void NotOp();
void AndOp();
void OrOp();
void EquivOp();
void RelOp();
void ArrayElement();
void SubstringRange();
void SubscriptTriplet();
void Name();
void Constant();
void UnsignedArithmeticConstant();
void ComplexConstant();
void LogicalConstant();
void Label();
void BlockDataName();
void CommonBlockName();
void DummyArgName();
void EntryName();
void ExternalName();
void FunctionName();
void ImpliedDoVariable();
void IntrinsicProcedureName();
void ObjectName();
void ProgramName();
void SFDummyArgName();
void SFVarName();
void SubroutineName();
void SubroutineNameUse();
void VariableName();
void ScalarVariable();
void Variable();
void SubscriptList();
void Subscript();
void LblDef();
void EOS();
void Expr();
void Impl();
